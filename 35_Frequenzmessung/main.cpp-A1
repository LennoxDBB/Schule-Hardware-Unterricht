/* mbed Microcontroller Library
 * Copyright (c) 2019 ARM Limited
 * SPDX-License-Identifier: Apache-2.0
 */

#include "mbed.h"
#include "LCD.h"

void initTimer();
void timerIsr();
void countUp();

InterruptIn signal(PA_10);
lcd mylcd;

int amount = 0;
int frequency = 0;

int main()
{
    signal.mode(PullDown);
    signal.rise(&countUp);
    signal.enable_irq();

    initTimer();

    mylcd.cursorpos(0);

    while(true) {
        mylcd.clear();
        mylcd.printf("%d", frequency);
    }
}

void initTimer() {
    RCC -> APB1ENR |= 0b10000;
    TIM6 -> PSC = 31999;
    TIM6 -> ARR = 1000;
    TIM6 -> DIER = 1;
    TIM6 -> SR = 0;
    TIM6 -> CR1 = 1;
    NVIC_SetVector(TIM6_IRQn, (uint32_t) &timerIsr);
    HAL_NVIC_EnableIRQ(TIM6_IRQn);
}

void timerIsr() {
    frequency = amount;
    amount = 0;
    TIM6 -> SR = 0;
    HAL_NVIC_ClearPendingIRQ(TIM6_IRQn);
}

void countUp() {
    amount++;
}